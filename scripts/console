#!/usr/bin/env ruby

require File.join(File.expand_path('../../config/', __FILE__), 'boot.rb')
require File.join(File.expand_path('../../', __FILE__), 'application.rb')

# NOTE: Taken from irb script
#   irb.rb - intaractive ruby
#   	$Release Version: 0.9.5 $
#   	$Revision: 11708 $
#   	$Date: 2007-02-13 08:01:19 +0900 (Tue, 13 Feb 2007) $
#   	by Keiju ISHITSUKA(keiju@ruby-lang.org)
#
require "irb"

if __FILE__ == $0
  IRB.start(__FILE__)
else
  # check -e option
  if /^-e$/ =~ $0
    IRB.start(__FILE__)
  else
    IRB.setup(__FILE__)
  end
end

# NOTE: taken from http://jameskilton.com/2009/04/02/embedding-irb-into-your-ruby-application/
#require 'irb'
 
#module IRB # :nodoc:
#  def self.start_session(binding)
#    unless @__initialized
#      args = ARGV
#      ARGV.replace(ARGV.dup)
#      IRB.setup(nil)
#      ARGV.replace(args)
#      @__initialized = true
#    end
 
#    workspace = WorkSpace.new(binding)
 
#    irb = Irb.new(workspace)
 
#    @CONF[:IRB_RC].call(irb.context) if @CONF[:IRB_RC]
#    @CONF[:MAIN_CONTEXT] = irb.context
 
#    catch(:IRB_EXIT) do
#      irb.eval_input
#    end
#  end
#end

#IRB.start_session(binding)
